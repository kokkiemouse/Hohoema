<UserControl x:Class="NicoPlayerHohoema.Views.PlaylistSidePaneContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="using:Microsoft.Xaml.Interactivity"
             xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
             xmlns:toolkit="using:WinRTXamlToolkit.Controls"
             xmlns:iconPack="using:MahApps.Metro.IconPacks"
             xmlns:uwpext="using:Microsoft.Toolkit.Uwp.UI.Extensions"
             xmlns:hardwareTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="400">
  <Grid>
    <toolkit:DockPanel x:Name="RootLayout">
      <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
          <mybehavior:SetFocus TargetObject="{Binding ElementName=ShuffleSwitchingButton}" />
        </core:EventTriggerBehavior>
      </i:Interaction.Behaviors>
      <toolkit:DockPanel x:Name="HeaderLayout"
                         toolkit:DockPanel.Dock="Top">
        <StackPanel Orientation="Horizontal"
                    toolkit:DockPanel.Dock="Left">
          <ToggleButton IsChecked="{x:Bind _viewModel.IsShuffleEnabled.Value, Mode=TwoWay}"
                        UseSystemFocusVisuals="True"
                        Margin="8 0 0 0"
                        x:Name="ShuffleSwitchingButton"
                        Background="Transparent">
            <iconPack:PackIconMaterial x:Name="ToggleShuffleButtonIcon"
                                       Kind="Shuffle"
                                       RenderTransformOrigin="0.5, 0.5">
              <iconPack:PackIconMaterial.RenderTransform>
                <CompositeTransform ScaleX="1.1"
                                    ScaleY="1.1" />
              </iconPack:PackIconMaterial.RenderTransform>
            </iconPack:PackIconMaterial>
          </ToggleButton>
          <Button Command="{x:Bind _viewModel.ToggleRepeatModeCommand}"
                  Background="Transparent"
                  UseSystemFocusVisuals="True"
                  Margin="8 0 0 0">
            <iconPack:PackIconMaterial x:Name="RepeatModeToggleButtonIcon"
                                       Kind="Repeat"
                                       RenderTransformOrigin="0.5, 0.5">
              <iconPack:PackIconMaterial.RenderTransform>
                <CompositeTransform ScaleX="1.4"
                                    ScaleY="1.4" />
              </iconPack:PackIconMaterial.RenderTransform>
            </iconPack:PackIconMaterial>
          </Button>
          <Button Command="{x:Bind _viewModel.ToggleReverseModeCommand}"
                  UseSystemFocusVisuals="True"
                  Margin="8 0 0 0"
                  x:Name="ReverseSwitchingButton"
                  Background="Transparent">
            <iconPack:PackIconMaterial x:Name="ToggleReverseButtonIcon"
                                       Kind="ArrowDownBold"
                                       RenderTransformOrigin="0.5, 0.5">
              <iconPack:PackIconMaterial.RenderTransform>
                <CompositeTransform ScaleX="1.1"
                                    ScaleY="1.1" />
              </iconPack:PackIconMaterial.RenderTransform>
            </iconPack:PackIconMaterial>
          </Button>
          <Border />
        </StackPanel>
        
        <Button HorizontalAlignment="Stretch"
                Command="{x:Bind _viewModel.PageManager.OpenPageCommand}"
                CommandParameter="{x:Bind _viewModel.HohoemaPlaylist.CurrentPlaylist, Mode=OneWay}"
                HorizontalContentAlignment="Left"
                >
          <StackPanel>
            <TextBlock toolkit:DockPanel.Dock="Top"
                       Text="{Binding Source=CurrentPlaylist, Converter={StaticResource LocalizeConverter}, Mode=OneTime}"
                       Style="{StaticResource CaptionTextBlockStyle}"
                       Margin="0"
                       Opacity="0.7"></TextBlock>
            <TextBlock Text="{x:Bind _viewModel.HohoemaPlaylist.CurrentPlaylist.Label, Mode=OneWay}"
                       Style="{StaticResource BodyTextBlockStyle}"
                       Margin="0"
                       VerticalAlignment="Top" />
          </StackPanel>
        </Button>
      </toolkit:DockPanel>

      <StackPanel>
        <TextBlock Text="{Binding Source=@queue, Converter={StaticResource LocalizeConverter}}" />

        <ListView x:Name="QueueItemsListView" ItemsSource="{x:Bind _viewModel.QueueItems}" SelectionMode="None" SingleSelectionFollowsFocus="False" IsItemClickEnabled="True" Background="{StaticResource HohoemaPlayerBackgroundBrush}" IsFocusEngagementEnabled="True">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{x:Bind _viewModel.HohoemaPlaylist.PlayCommand}" InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="Padding" Value="8 6 8 6" />
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Label}" TextWrapping="Wrap" VerticalAlignment="Center" />
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>

        <TextBlock Text="{Binding CurrentPlaylistName.Value}" />

        <ListView ItemsSource="{Binding CurrentItems}" SelectedItem="{x:Bind _viewModel.HohoemaPlaylist.CurrentItem, Mode=OneWay}" SelectionMode="Single" SingleSelectionFollowsFocus="False" IsItemClickEnabled="True" x:Name="PlaylistItemsListView" Background="{StaticResource HohoemaPlayerBackgroundBrush}" IsFocusEngagementEnabled="True">
          <i:Interaction.Behaviors>
            <core:EventTriggerBehavior EventName="ItemClick">
              <core:InvokeCommandAction Command="{x:Bind _viewModel.PlayWithCurrentPlaylistCommand}" InputConverter="{StaticResource ItemClickEventArgsConverter}" />
            </core:EventTriggerBehavior>
          </i:Interaction.Behaviors>
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="Padding" Value="8 6 8 6" />
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Label}" TextWrapping="Wrap" VerticalAlignment="Center" />
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </StackPanel>
      
    </toolkit:DockPanel>
    <VisualStateManager.VisualStateGroups>
      <!-- Xbox -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <hardwareTrigger:DeviceFamilyTrigger Condition="Xbox" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlaylistItemsListView.Padding"
                    Value="0 0 48 0" />
            <Setter Target="HeaderLayout.Padding"
                    Value="0 0 48 0" />
            <Setter Target="FooterLayout.Padding"
                    Value="0 0 48 0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- リピートモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _viewModel.IsTrackRepeatModeEnable.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="RepeatModeToggleButtonIcon.Kind"
                    Value="RepeatOnce" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _viewModel.IsListRepeatModeEnable.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="RepeatModeToggleButtonIcon.Kind"
                    Value="Repeat" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="True" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="RepeatModeToggleButtonIcon.Kind"
                    Value="RepeatOff" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- リピートモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _viewModel.IsReverseEnabled.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ToggleReverseButtonIcon.Kind"
                    Value="ArrowUpBold" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
