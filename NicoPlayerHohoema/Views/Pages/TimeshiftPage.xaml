<Page
    x:Class="NicoPlayerHohoema.Views.TimeshiftPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Mvvm"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:actions="using:NicoPlayerHohoema.Views.Actions"
    xmlns:viewmodels="using:NicoPlayerHohoema.ViewModels"
    xmlns:templateselector="using:NicoPlayerHohoema.Views.TemplateSelector"
    DataContext="{x:Null}"
    NavigationCacheMode="Enabled"
    xmlns:liveDetail="using:Mntone.Nico2.Live.ReservationsInDetail" xmlns:windowsStateTriggers="using:WindowsStateTriggers" mc:Ignorable="d"
    >
  <Page.Resources>
    <DataTemplate x:Key="TimeshiftItem_Reserved">
      <StackPanel>
        <TextBlock Text="{Binding ExpiredAt, Converter={StaticResource ExpiredDateTimeToString}}" HorizontalAlignment="Right" FontSize="13" Opacity="0.6" />
        <controls:LiveVideoListItem />
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="TimeshiftItem_Watch">
      <StackPanel>
        <TextBlock Text="{Binding ExpiredAt, Converter={StaticResource ExpiredDateTimeToString}}" HorizontalAlignment="Right" FontSize="13" Opacity="0.6" />
        <controls:LiveVideoListItem />
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="TimeshiftItem_TimeOut">
      <StackPanel>
        <TextBlock Text="{Binding ExpiredAt, Converter={StaticResource ExpiredDateTimeToString}}" HorizontalAlignment="Right" FontSize="13" Opacity="0.6" />
        <controls:LiveVideoListItem Opacity="0.6" />
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="TimeshiftItem_UnknownStatus">
      <StackPanel>
        <TextBlock Text="{Binding ExpiredAt, Converter={StaticResource ExpiredDateTimeToString}}" HorizontalAlignment="Right" FontSize="13" Opacity="0.6" />
        <controls:LiveVideoListItem Opacity="0.6" />
      </StackPanel>
    </DataTemplate>
    <templateselector:ValueDataTemplateSelector x:Key="TimeshiftItemTemplateSelector" PropertyName="ReservationStatus" Default="{StaticResource TimeshiftItem_Watch}">
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.RESERVED}" Template="{StaticResource TimeshiftItem_Reserved}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.WATCH}" Template="{StaticResource TimeshiftItem_Watch}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.FIRST_WATCH}" Template="{StaticResource TimeshiftItem_Watch}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.TSARCHIVE}" Template="{StaticResource TimeshiftItem_Watch}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.PRODUCT_ARCHIVE_WATCH}" Template="{StaticResource TimeshiftItem_Watch}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.USER_TIMESHIFT_DATE_OUT}" Template="{StaticResource TimeshiftItem_TimeOut}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.PRODUCT_ARCHIVE_TIMEOUT}" Template="{StaticResource TimeshiftItem_TimeOut}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.USE_LIMIT_DATE_OUT}" Template="{StaticResource TimeshiftItem_TimeOut}" />
      <templateselector:ValueDataTemplate Value="{x:Bind liveDetail:ReservationStatus.LIMIT_DATE_OUT}" Template="{StaticResource TimeshiftItem_TimeOut}" />
    </templateselector:ValueDataTemplateSelector>
  </Page.Resources>
  <Grid>
    
    <uwpcontrols:PullToRefreshListView x:Name="ItemsList" ItemsSource="{Binding ItemsView, Mode=OneWay}" RefreshCommand="{Binding RefreshCommand}" uwpExtensions:ListViewBase.Command="{Binding HohoemaPlaylist.PlayCommand}" IsItemClickEnabled="True" IncrementalLoadingTrigger="Edge" PullThreshold="85" UseSystemFocusVisuals="True" SelectionMode="None" HorizontalContentAlignment="Stretch" ItemContainerStyle="{StaticResource VideoListViewItemStyle}" uwpExtensions:ScrollViewerEx.VerticalScrollBarMargin="0 48 0 0" ScrollViewer.BringIntoViewOnFocusChange="False" ItemTemplateSelector="{StaticResource TimeshiftItemTemplateSelector}" xmlns:myExtensions="using:NicoPlayerHohoema.Views.Extensions" myExtensions:ListViewBase.DeferInitialize="True">
      <i:Interaction.Behaviors>
        <mybehavior:KeyboardTrigger Key="F5">
          <mybehavior:KeyboardTrigger.Actions>
            <core:InvokeCommandAction Command="{Binding  RefreshCommand}" />
          </mybehavior:KeyboardTrigger.Actions>
        </mybehavior:KeyboardTrigger>
        <mybehavior:ListViewVerticalOffsetGetter VerticalOffset="{Binding ScrollPosition.Value, Mode=TwoWay}" />
      </i:Interaction.Behaviors>
      <ListView.Header>
        <Grid x:Name="HeaderLayout" Background="{StaticResource MenuBackgroundBrush}">
          <controls:ScrollHeader x:Name="ScrollHeader" Mode="Sticky">
            <toolkit:DockPanel>
              <StackPanel>
                <CommandBar x:Name="TopCommandBar" toolkit:DockPanel.Dock="Right" VerticalContentAlignment="Bottom">
                  <CommandBar.SecondaryCommands>
                    <AppBarButton Label="{Binding Source=DeleteOutdatedReservationConfirm_Title, Converter={StaticResource ToLocalText}}" Icon="Delete" Command="{Binding DeleteOutdatedReservations}" />
                  </CommandBar.SecondaryCommands>
                  <CommandBar.PrimaryCommands>
                    <AppBarButton x:Name="ScrollToTopButton" Label="トップへ戻る" Icon="Up">
                      <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                          <actions:ScrollViewerVerticalPositionSettingsAction Target="{Binding ElementName=ItemsList}" VerticalOffset="0.0" />
                        </core:EventTriggerBehavior>
                      </i:Interaction.Behaviors>
                    </AppBarButton>
                    <AppBarButton x:Name="UpdateButton" Command="{Binding RefreshCommand}" Background="Transparent" Icon="Refresh" Label="更新" />
                  </CommandBar.PrimaryCommands>
                </CommandBar>
              </StackPanel>
            </toolkit:DockPanel>
          </controls:ScrollHeader>
        </Grid>
      </ListView.Header>
      <ListView.ItemsPanel>
        <ItemsPanelTemplate>
          <ItemsStackPanel x:Name="ItemsPanel" />
        </ItemsPanelTemplate>
      </ListView.ItemsPanel>
      <uwpcontrols:PullToRefreshListView.RefreshIndicatorContent>
        <StackPanel Margin="0 32 0 0">
          <Border Margin="0 16 0 0" BorderThickness="0 0 0 1" BorderBrush="Gray" />
          <SymbolIcon Symbol="Refresh" VerticalAlignment="Bottom" Height="48" Width="48" Margin="0 24 0 8" />
        </StackPanel>
      </uwpcontrols:PullToRefreshListView.RefreshIndicatorContent>
    </uwpcontrols:PullToRefreshListView>
    <VisualStateManager.VisualStateGroups>
      <!-- レイアウトモード -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="TV" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_TV}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_TV}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Desktop" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Desktop}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Desktop}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Tablet" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Tablet}" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:EqualsStateTrigger Value="{Binding ApplicationLayoutManager.AppLayout}" EqualTo="Mobile" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderLayout.Padding" Value="{StaticResource ContentListViewHeaderMargin_Mobile}" />
            <Setter Target="ItemsPanel.Margin" Value="{StaticResource ContentListViewBodyMargin_Mobile}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- トップバー表示時のタイトル位置ずらし -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <windowsStateTriggers:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
            <StateTrigger IsActive="{Binding AppearanceSettings.IsTVMode_Debug}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ItemsList.Padding" Value="48 0 48 27" />
            <Setter Target="ScrollHeader.Mode" Value="None" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="{StaticResource WidthBreakPoint_WideToMiddle}" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
  
</Page>
