<UserControl x:Class="NicoPlayerHohoema.Views.PrimaryWindowCoreLayout" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:NicoPlayerHohoema.Views" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:i="using:Microsoft.Xaml.Interactivity" xmlns:core="using:Microsoft.Xaml.Interactions.Core" xmlns:windowsTriggers="using:WindowsStateTriggers" xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers" xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors" xmlns:uwpToolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls" xmlns:uwpui="using:Microsoft.Toolkit.Uwp.UI.Extensions" xmlns:iconPack="using:MahApps.Metro.IconPacks" xmlns:myextensions="using:NicoPlayerHohoema.Views.Extensions" xmlns:listItemControls="using:NicoPlayerHohoema.Views.Controls" xmlns:templateSelector="using:NicoPlayerHohoema.Views.TemplateSelector" xmlns:mytrigger="using:NicoPlayerHohoema.Views.StateTrigger" xmlns:servicesPlayer="using:NicoPlayerHohoema.Services.Player" mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="400">
  <UserControl.Resources>
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{ThemeResource SystemChromeMediumColor}" Opacity="1.0" />
    <x:String x:Key="SideMenuPaneLength">280</x:String>
    <x:String x:Key="SideMenuPaneLength_TVMode">340</x:String>
    <x:String x:Key="DesktopFloatPlayerHeight">160</x:String>
    <x:String x:Key="MobileFloatPlayerHeight">240</x:String>
    <x:Double x:Key="MenuContentToggleAnimationDuration">175</x:Double>
    <Style TargetType="iconPack:PackIconMaterial">
      <Setter Property="RenderTransform">
        <Setter.Value>
          <ScaleTransform ScaleX="1.25" ScaleY="1.25" CenterX="12" CenterY="12" />
        </Setter.Value>
      </Setter>
    </Style>
    <templateSelector:ValueDataTemplateSelector x:Key="PageTypeIconTemplateSelector">
      <templateSelector:ValueDataTemplate Value="RankingCategoryList">
        <DataTemplate>
          <SymbolIcon Symbol="Flag" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="RankingCategory">
        <DataTemplate>
          <SymbolIcon Symbol="Flag" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="UserMylist">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Mylist">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="FollowManage">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Star" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="WatchHistory">
        <DataTemplate>
          <SymbolIcon Symbol="Clock" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Search">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchSummary">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultCommunity">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultTag">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultKeyword">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultMylist">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="SearchResultLive">
        <DataTemplate>
          <SymbolIcon Symbol="Find" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="UserInfo">
        <DataTemplate>
          <SymbolIcon Symbol="Account" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="UserVideo">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Community">
        <DataTemplate>
          <SymbolIcon Symbol="People" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="CommunityVideo">
        <DataTemplate>
          <SymbolIcon Symbol="People" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="VideoInfomation">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Information" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="CacheManagement">
        <DataTemplate>
          <SymbolIcon Symbol="Download" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Settings">
        <DataTemplate>
          <SymbolIcon Symbol="Setting" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="NicoRepo">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Recommend">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="ThumbUp" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Subscription">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="ClockFast" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="LiveInfomation">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Information" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="Timeshift">
        <DataTemplate>
          <SymbolIcon Symbol="Clock" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="ChannelInfo">
        <DataTemplate>
          <iconPack:PackIconMaterial Kind="Group" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
      <templateSelector:ValueDataTemplate Value="ChannelVideo">
        <DataTemplate>
          <SymbolIcon Symbol="List" />
        </DataTemplate>
      </templateSelector:ValueDataTemplate>
    </templateSelector:ValueDataTemplateSelector>
    <DataTemplate x:Key="MenuItemTemplate">
      <StackPanel Orientation="Horizontal" Opacity="0.85" Margin="16 0 0 0">
        <ContentControl Content="{Binding PageType}" ContentTemplateSelector="{StaticResource PageTypeIconTemplateSelector}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.7" Width="24" Height="24" />
        <Border Height="4" Width="16" />
        <TextBlock Text="{Binding Label}" VerticalAlignment="Center" FontSize="15" />
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="PinMenuItemTemplate">
      <StackPanel Orientation="Horizontal" Opacity="0.85" Margin="0 0 0 0">
        <ContentControl Content="{Binding PageType,Mode=OneTime}" ContentTemplateSelector="{StaticResource PageTypeIconTemplateSelector}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.7" Width="24" Height="24" />
        <Border Height="4" Width="16" />
        <!--  OverrideLabelが未設定の場合の表示 -->
        <StackPanel Orientation="Horizontal" Visibility="{Binding OverrideLabel, Converter={StaticResource NullToVisibility}}">
          <TextBlock Text="{Binding Label,Mode=OneTime}" VerticalAlignment="Center" FontSize="15" />
          <Border Height="4" Width="8" />
          <TextBlock Style="{StaticResource CaptionTextBlockStyle}" VerticalAlignment="Center">
                            (<Run Text="{Binding PageType, Converter={StaticResource LocalizeConverter},Mode=OneTime}" />)</TextBlock>
        </StackPanel>
        <!-- OverrideLabelが設定済みの場合 -->
        <StackPanel Orientation="Horizontal" Visibility="{Binding OverrideLabel, Converter={StaticResource NotNullToVisibility}}">
          <TextBlock Text="{Binding OverrideLabel}" VerticalAlignment="Center" FontSize="15" />
        </StackPanel>
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="SingleMenuItemTemplate">
      <ListView uwpui:ListViewBase.Command="{Binding PageManager.OpenPageCommand}" IsItemClickEnabled="True" SelectionMode="None" IsTabStop="False">
        <ListView.ItemContainerStyle>
          <Style TargetType="ListViewItem">
            <Setter Property="Padding" Value="0" />
          </Style>
        </ListView.ItemContainerStyle>
        <ListViewItem ContentTemplate="{StaticResource MenuItemTemplate}" Content="{Binding}"></ListViewItem>
      </ListView>
    </DataTemplate>
    <DataTemplate x:Name="VideoSubMenuContentTemplate">
      <StackPanel>
        <ListView ItemsSource="{Binding MenuItems}" ItemTemplate="{StaticResource MenuItemTemplate}" uwpui:ListViewBase.Command="{Binding PageManager.OpenPageCommand}" IsItemClickEnabled="True" SelectionMode="None" IsTabStop="False" Background="Transparent" ScrollViewer.VerticalScrollMode="Disabled" />
        <Border BorderBrush="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Opacity="0.3" BorderThickness="0 1 0 0" VerticalAlignment="Center" Margin="16 8" />
        <Button Command="{Binding PageManager.OpenPageCommand}" CommandParameter="UserMylist" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Background="Transparent" Padding="16 0">
          <TextBlock Text="マイリスト" uwpToolkitControls:DockPanel.Dock="Left" VerticalAlignment="Center" Style="{StaticResource SubtitleTextBlockStyle}" />
        </Button>
        <ListView ItemsSource="{Binding Mylists}" ItemTemplate="{StaticResource MenuItemTemplate}" uwpui:ListViewBase.Command="{Binding PageManager.OpenPageCommand}" IsItemClickEnabled="True" SelectionMode="None" IsTabStop="False" Background="Transparent" ScrollViewer.VerticalScrollMode="Disabled" />
        <Border BorderBrush="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Opacity="0.3" BorderThickness="0 1 0 0" VerticalAlignment="Center" Margin="16 8" Visibility="{Binding LocalMylists, Converter={StaticResource CollectionVisibilityConverter}}" />
        <ListView ItemsSource="{Binding LocalMylists}" ItemTemplate="{StaticResource MenuItemTemplate}" uwpui:ListViewBase.Command="{Binding PageManager.OpenPageCommand}" IsItemClickEnabled="True" SelectionMode="None" IsTabStop="False" Background="Transparent" ScrollViewer.VerticalScrollMode="Disabled" />
      </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="LiveStreamInfoTemplate">
      <uwpToolkitControls:DockPanel>
        <TextBlock Text="{Binding StartAt}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="0.7" TextWrapping="Wrap" uwpToolkitControls:DockPanel.Dock="Top" />
        <uwpToolkitControls:RoundImageEx Source="{Binding Thumbnail}" Style="{StaticResource RoundStyle}" uwpToolkitControls:DockPanel.Dock="Left" Margin="0 0 8 0" />
        <TextBlock Text="{Binding CommunityName}" VerticalAlignment="Center" uwpToolkitControls:DockPanel.Dock="Top" />
        <TextBlock Text="{Binding Label}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="0.7" TextWrapping="Wrap" />
      </uwpToolkitControls:DockPanel>
    </DataTemplate>
    <DataTemplate x:Name="LiveSubMenuContentTemplate">
      <StackPanel>
        <ListView ItemsSource="{Binding MenuItems}" ItemTemplate="{StaticResource MenuItemTemplate}" uwpui:ListViewBase.Command="{Binding PageManager.OpenPageCommand}" IsItemClickEnabled="True" SelectionMode="None" IsTabStop="False" Background="Transparent" ScrollViewer.VerticalScrollMode="Disabled" />
      </StackPanel>
    </DataTemplate>
    <templateSelector:MenuSubPageTemplateSelector x:Name="MenuSubPageTemplateSelector" Video="{StaticResource VideoSubMenuContentTemplate}" Live="{StaticResource LiveSubMenuContentTemplate}">
      <templateSelector:MenuSubPageTemplateSelector.Empty>
        <DataTemplate>
          <Border />
        </DataTemplate>
      </templateSelector:MenuSubPageTemplateSelector.Empty>
    </templateSelector:MenuSubPageTemplateSelector>
    <Style x:Key="BaseStyle" TargetType="uwpToolkitControls:ImageExBase">
      <Setter Property="IsCacheEnabled" Value="True" />
      <Setter Property="Stretch" Value="UniformToFill" />
      <Setter Property="PlaceholderStretch" Value="UniformToFill" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="White" />
    </Style>
    <!--Create a Style based on BaseStyle-->
    <Style x:Key="RoundStyle" TargetType="uwpToolkitControls:RoundImageEx" BasedOn="{StaticResource BaseStyle}">
      <Setter Property="Width" Value="48" />
      <Setter Property="Height" Value="48" />
      <Setter Property="CornerRadius" Value="999" />
    </Style>
  </UserControl.Resources>
  <Grid x:Name="RootLayout" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <uwpToolkitControls:DockPanel>
      <SplitView x:Name="ContentSplitView" CompactPaneLength="48" OpenPaneLength="{StaticResource SideMenuPaneLength}" DisplayMode="Inline" IsPaneOpen="True" IsTabStop="False" PaneBackground="{StaticResource MenuBackgroundBrush}">
        <SplitView.Pane>
          <uwpToolkitControls:DockPanel x:Name="PaneLayout">
            <Border Height="{StaticResource TitleBarDummyHeight}" uwpToolkitControls:DockPanel.Dock="Top" />
            <Border uwpToolkitControls:DockPanel.Dock="Top" Margin="8 0 8 8">
              <TextBox x:Name="SearchTextBox" Text="{x:Bind SearchInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="検索" UseSystemFocusVisuals="True" TabIndex="103"  Padding="0" Margin="0 16 0 0">
                <i:Interaction.Behaviors>
                  <mybehavior:KeyboardTrigger Key="Enter" x:Name="SearchSubmitWithEnterKeyTrigger" IsEnabled="False">
                    <core:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{x:Bind SearchInputText, Mode=OneWay}" />
                    <core:ChangePropertyAction PropertyName="IsEnabled" Value="False" />
                    <core:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                  </mybehavior:KeyboardTrigger>
                  <mybehavior:UINavigationTrigger Kind="Cancel">
                    <mybehavior:SetFocus TargetObject="{Binding ElementName=SubMenuPageTypesListView}" />
                  </mybehavior:UINavigationTrigger>
                </i:Interaction.Behaviors>
              </TextBox>
            </Border>
            <uwpToolkitControls:DockPanel uwpToolkitControls:DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
              <Button Command="{Binding PageManager.OpenPageCommand}" CommandParameter="Settings" uwpToolkitControls:DockPanel.Dock="Right" Background="Transparent" TabIndex="101">
                <SymbolIcon Symbol="Setting" />
              </Button>
              <Grid>
                <Button x:Name="OpenAccountButton" Padding="16 0 0 0" Background="Transparent" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" TabIndex="100">
                  <Button.Flyout>
                    <MenuFlyout>
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_OpenAccountInfo" Visibility="Collapsed" Text="アカウント情報" Command="{Binding OpenAccountInfoCommand}" />
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_Logout" Visibility="Collapsed" Text="ログアウト" Command="{Binding LogoutFromNiconicoCommand}" />
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_Login" Visibility="Collapsed" Text="ログイン" Command="{Binding NiconicoLoginService.LoginCommand}" />
                      <MenuFlyoutItem x:Name="MenuFlyoutItem_OpenDebugPage" Visibility="Collapsed" Text="デバッグページを開く" Command="{Binding OpenDebugPageCommand}" />
                    </MenuFlyout>
                  </Button.Flyout>
                  <StackPanel>
                    <TextBlock Text="{Binding NiconicoSession.ServiceStatus, Converter={StaticResource LocalizeConverter}}" x:Name="ServiceStateText" />
                    <uwpToolkitControls:DockPanel Margin="0 0" x:Name="AccountInfoLayout" Visibility="Collapsed">
                      <Image Source="{Binding NiconicoSession.UserIconUrl,Mode=OneWay}" uwpToolkitControls:DockPanel.Dock="Left" Height="24" Width="24" Margin="0 0 8 0" />
                      <StackPanel>
                        <TextBlock Text="{x:Bind _viewModel.NiconicoSession.UserName,Mode=OneWay}" />
                      </StackPanel>
                    </uwpToolkitControls:DockPanel>
                  </StackPanel>
                </Button>
              </Grid>
            </uwpToolkitControls:DockPanel>
            <ScrollViewer HorizontalScrollMode="Disabled" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Hidden">
              <StackPanel x:Name="PaneScrollableContentLayout">
                <StackPanel>
                  <uwpToolkitControls:DockPanel Margin="0">
                    <Button Command="{x:Bind AddPinCurrentPageCommand}" Background="Transparent" Height="24" uwpToolkitControls:DockPanel.Dock="Right" Margin="0 0 8 0">
                      <SymbolIcon Symbol="Add" ToolTipService.ToolTip="現在のページをピン留めする" Opacity="0.55" />
                    </Button>
                    <TextBlock Text="ピン留め" VerticalAlignment="Center" FontSize="14" Margin="16 0 0 0" Opacity="0.55" />
                  </uwpToolkitControls:DockPanel>
                  <ListView ItemsSource="{Binding PinSettings.Pins}" ItemTemplate="{StaticResource PinMenuItemTemplate}" uwpui:ListViewBase.Command="{Binding PageManager.OpenPageCommand}" IsItemClickEnabled="True" SelectionMode="None" TabIndex="1" CanReorderItems="True" AllowDrop="True" xmlns:myExtensions="using:NicoPlayerHohoema.Views.Extensions" myExtensions:ListViewBase.ItemContextFlyoutCustomObjectToTag="{Binding}">
                    <myExtensions:ListViewBase.ItemContextFlyoutTemplate>
                      <DataTemplate>
                        <MenuFlyout>
                          <MenuFlyoutItem Text="ピンに別名を付ける" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.PinChangeOverrideLabelCommand}" CommandParameter="{Binding}" />
                          <MenuFlyoutSeparator />
                          <MenuFlyoutItem Text="ピン留めを解除" Command="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag.PinRemoveCommand}" CommandParameter="{Binding}" />
                        </MenuFlyout>
                      </DataTemplate>
                    </myExtensions:ListViewBase.ItemContextFlyoutTemplate>
                  </ListView>
                  <StackPanel Visibility="{Binding PinSettings.Pins, Converter={StaticResource EmptyCollectionVisibilityConverter}}" Margin="0 8">
                    <TextBlock Opacity="0.7" FontSize="12" Margin="24 0 0 0">
                                                    好きなページを開いて「＋ボタン」でピン留め</TextBlock>
                  </StackPanel>
                </StackPanel>
                <Pivot>
                  <Pivot.ItemContainerStyle>
                    <Style TargetType="PivotItem">
                      <Setter Property="Margin" Value="0" />
                    </Style>
                  </Pivot.ItemContainerStyle>
                  <PivotItem Header="動画" Content="{Binding VideoMenu}" ContentTemplate="{StaticResource VideoSubMenuContentTemplate}" />
                  <PivotItem Header="生放送" Content="{Binding LiveMenu}" ContentTemplate="{StaticResource LiveSubMenuContentTemplate}" />
                </Pivot>
              </StackPanel>
            </ScrollViewer>
          </uwpToolkitControls:DockPanel>
        </SplitView.Pane>
        <SplitView.Content>
          <Grid x:Name="SplitViewContentLayout">
            <uwpToolkitControls:DockPanel>
              <Border x:Name="TopMenu" uwpToolkitControls:DockPanel.Dock="Top">
                <uwpToolkitControls:DockPanel x:Name="TopMenuLayout">
                  <Border uwpToolkitControls:DockPanel.Dock="Top" Height="{StaticResource TitleBarDummyHeight}" />
                  <!-- モバイル時のメニュー開閉ボタン -->
                  <Button x:Name="MenuToggleButton" uwpToolkitControls:DockPanel.Dock="Left" Visibility="Collapsed" Width="40" Height="40" Background="Transparent" Command="{x:Bind TogglePageOpenCommand}">
                    <iconPack:PackIconMaterial Kind="Menu" Width="20" Height="20" Opacity="0.9" />
                  </Button>
                  <Grid Height="40">
                    <TextBlock x:Name="MenuTitleText" Text="{x:Bind PageTitle,Mode=OneWay}" Style="{StaticResource SubtitleTextBlockStyle}" Margin="16 8 16 8" VerticalAlignment="Center" />
                    <Button Background="Transparent" HorizontalAlignment="Right" x:Name="Mobile_ShowSearchButton" Visibility="Collapsed" Padding="16 0">
                      <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                          <core:ChangePropertyAction TargetObject="{Binding ElementName=Mobile_SearchTextBox}" PropertyName="Visibility" Value="Visible" />
                          <mybehavior:SetFocus TargetObject="{Binding ElementName=Mobile_SearchTextBox}" />
                        </core:EventTriggerBehavior>
                      </i:Interaction.Behaviors>
                      <StackPanel Orientation="Horizontal">
                        <SymbolIcon Symbol="Find" Opacity="0.7" Margin="0 0 8 0" VerticalAlignment="Center">
                          <SymbolIcon.RenderTransform>
                            <ScaleTransform ScaleX="0.8" ScaleY="0.8" CenterX="13" CenterY="13" />
                          </SymbolIcon.RenderTransform>
                        </SymbolIcon>
                        <TextBlock Text="{Binding Source=Search, Converter={StaticResource LocalizeConverter}}" Opacity="0.7" VerticalAlignment="Center" FontSize="13" />
                      </StackPanel>
                    </Button>
                    <Border Background="{StaticResource MenuBackgroundBrush}" x:Name="Mobile_BlindSearchTextBoxBorder" Visibility="Collapsed" />
                    <TextBox x:Name="Mobile_SearchTextBox" Text="{x:Bind SearchInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="検索" UseSystemFocusVisuals="True" TabIndex="103" Padding="0" Visibility="Collapsed" VerticalAlignment="Center">
                      <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="LostFocus">
                          <core:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                        </core:EventTriggerBehavior>
                        <mybehavior:KeyboardTrigger Key="Enter" x:Name="Mobile_SearchSubmitWithEnterKeyTrigger" IsEnabled="False">
                          <core:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{x:Bind SearchInputText, Mode=OneWay}" />
                          <core:ChangePropertyAction PropertyName="IsEnabled" Value="False" />
                          <core:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                        </mybehavior:KeyboardTrigger>
                      </i:Interaction.Behaviors>
                    </TextBox>
                  </Grid>
                </uwpToolkitControls:DockPanel>
              </Border>
              <!-- ページ毎のコンテンツ -->
              <Grid>
                <Frame x:Name="ContentFrame" VerticalContentAlignment="Stretch" DataContext="{x:Null}">
                  <myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
                    <templateSelector:HohoemaFlyoutTemplateSelector>
                      <templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                        <DataTemplate>
                          <listItemControls:LiveListItemFlyout />
                        </DataTemplate>
                      </templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                      <templateSelector:HohoemaFlyoutTemplateSelector.SearchHistoryFlyoutTemplate>
                        <DataTemplate>
                          <local:SearchHistoryListItemFlyout />
                        </DataTemplate>
                      </templateSelector:HohoemaFlyoutTemplateSelector.SearchHistoryFlyoutTemplate>
                    </templateSelector:HohoemaFlyoutTemplateSelector>
                  </myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
                </Frame>
                <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="Mobile_BarrierSearchTextBoxBorder" Visibility="Collapsed" IsHitTestVisible="True" Opacity="0.8" />
              </Grid>
            </uwpToolkitControls:DockPanel>
            <Grid x:Name="MenuBackgroundGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.5" Visibility="Collapsed" IsTapEnabled="True" IsHitTestVisible="True">
              <UserControl IsTabStop="True" />
            </Grid>
          </Grid>
        </SplitView.Content>
      </SplitView>
    </uwpToolkitControls:DockPanel>
    <!-- Player -->
    <Grid>
      <Grid x:Name="ContentLayout">
        <uwpToolkitControls:DockPanel>
          <Border uwpToolkitControls:DockPanel.Dock="Top" x:Name="MobilePlayerTopMargin" Height="{Binding ElementName=PlayerFrame, Path=ActualHeight, Mode=OneWay}" Visibility="Collapsed" />
          <ContentPresenter />
        </uwpToolkitControls:DockPanel>
      </Grid>
      <Grid x:Name="PlayerLayout" Visibility="Collapsed">
        <Frame x:Name="PlayerFrame" DataContext="{x:Null}" CacheSize="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
          <Frame.ContentTransitions>
            <TransitionCollection>
              <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                  <DrillInNavigationTransitionInfo />
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
              </NavigationThemeTransition>
            </TransitionCollection>
          </Frame.ContentTransitions>
        </Frame>
        <Grid x:Name="FillPlayerLayout" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Grid>
        <Grid x:Name="FloatPlayerLayout" Visibility="Collapsed">
          <Button Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <i:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="Click">
                <core:CallMethodAction TargetObject="{Binding PrimaryViewPlayerManager}" MethodName="ShowWithFill" />
              </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <Button.ContextFlyout>
              <MenuFlyout>
                <MenuFlyoutItem Text="閉じる" Command="{Binding PrimaryViewPlayerManager.CloseCommand}" />
              </MenuFlyout>
            </Button.ContextFlyout>
            <Border />
          </Button>
        </Grid>
      </Grid>
    </Grid>
    <uwpToolkitControls:DockPanel Height="{StaticResource TitleBarDummyHeight}" VerticalAlignment="Top">
      <Border x:Name="BackButtonLayout" uwpToolkitControls:DockPanel.Dock="Left">
        <Border>
          <Button MinHeight="{StaticResource TitleBarDummyHeight}" Background="Transparent" VerticalContentAlignment="Center" Command="{x:Bind GoBackCommand}">
            <SymbolIcon Symbol="Back" Height="10" Width="10" />
          </Button>
        </Border>
      </Border>
      <Border x:Name="DraggableContent" IsTapEnabled="True" Background="Transparent">
        <TextBlock Text="Hohoema" Margin="12 0 0 0" VerticalAlignment="Center" Opacity="0.9" FontSize="13" HorizontalAlignment="Left" x:Name="TitleBarTextBlock"></TextBlock>
      </Border>
    </uwpToolkitControls:DockPanel>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="TopBarStateGroup">
        <!-- トップメニュー非表示 -->
        <!--
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsVisibleMenu.Value, Converter={StaticResource BoolNegation}}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.DisplayMode"
                    Value="Overlay" />
            <Setter Target="ContentSplitView.IsPaneOpen"
                    Value="False" />

            <Setter Target="TopMenuLayout.Visibility"
                    Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        -->
        <!-- TV Mode ON -->
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding AppearanceSettings.IsForceTVModeEnable}" />
            <windowsTriggers:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
            <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />
            <Setter Target="PaneLayout.Margin" Value="48 27 0 27" />
            <Setter Target="ContentSplitView.OpenPaneLength" Value="{StaticResource SideMenuPaneLength_TVMode}" />
            <Setter Target="TopMenu.Margin" Value="48 27 0 0" />
            <Setter Target="MenuTitleText.Margin" Value="16 5 16 8" />
            <Setter Target="MenuToggleButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <!-- マウス操作時、または画面が大きい時 -->
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="{StaticResource DesktopWindowWidthBreakPoint}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.DisplayMode" Value="CompactInline" />
            <Setter Target="ContentSplitView.IsPaneOpen" Value="True" />
          </VisualState.Setters>
        </VisualState>
        <!-- 狭い -->
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
            <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />
            <Setter Target="MenuToggleButton.Visibility" Value="Visible" />
            <Setter Target="MenuTitleText.Style" Value="{StaticResource BodyTextBlockStyle}" />
            <Setter Target="MenuTitleText.Margin" Value="16 0 16 0" />
            <Setter Target="TopMenu.Background" Value="{StaticResource MenuBackgroundBrush}" />
            <Setter Target="Mobile_ShowSearchButton.Visibility" Value="Visible" />
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- アプリのサービス状態 -->
      <VisualStateGroup>
        <VisualState x:Name="OfflineState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="Offline" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
            <Setter Target="SearchTextBox.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="ServiceUnavailableState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="ServiceUnavailable" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="WithoutLoggedInState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="WithoutLoggedIn" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_Login.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="LoggedInState">
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Value="{Binding NiconicoSession.ServiceStatus}" Condition="LoggedIn" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ServiceStateText.Visibility" Value="Collapsed" />
            <Setter Target="AccountInfoLayout.Visibility" Value="Visible" />
            <Setter Target="MenuFlyoutItem_OpenAccountInfo.Visibility" Value="Visible" />
            <Setter Target="MenuFlyoutItem_Logout.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- ペインの開閉状態 -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <mytrigger:EqualConditionStateTrigger Condition="{Binding ElementName=ContentSplitView, Path=DisplayMode, Mode=OneWay}" Value="CompactInline" />
            <mytrigger:EqualConditionStateTrigger Condition="{Binding ElementName=ContentSplitView, Path=DisplayMode, Mode=OneWay}" Value="Inline" />
          </VisualState.StateTriggers>
          <VisualState.Setters></VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding ElementName=ContentSplitView, Path=IsPaneOpen,Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuBackgroundGrid.Visibility" Value="Visible" />
            <Setter Target="ContentLayout.IsHitTestVisible" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- 検索ボックス -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <mytrigger:FocusTrigger Target="{Binding ElementName=SearchTextBox}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SearchSubmitWithEnterKeyTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- モバイルの検索ボックスをフォーカス -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <mytrigger:FocusTrigger Target="{Binding ElementName=Mobile_SearchTextBox}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Mobile_BlindSearchTextBoxBorder.Visibility" Value="Visible" />
            <Setter Target="Mobile_BarrierSearchTextBoxBorder.Visibility" Value="Visible" />
            <Setter Target="Mobile_SearchSubmitWithEnterKeyTrigger.IsEnabled" Value="True" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- モバイルデバイスでの表示調整 -->
      <VisualStateGroup>
        <!-- フルスクリーン時はステータスバーが非表示になる -->
        <VisualState>
          <VisualState.StateTriggers>
            <uiTrigger:FullScreenTrigger />
          </VisualState.StateTriggers>
        </VisualState>
        <!-- モバイルかつ横持ち状態 -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
              <windowsTriggers:OrientationStateTrigger Orientation="Landscape" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PaneLayout.Margin" Value="40 0 0 0" />
            <Setter Target="TopMenuLayout.Margin" Value="40 0 0 0" />
          </VisualState.Setters>
        </VisualState>
        <!-- モバイルかつ縦持ち状態 -->
        <VisualState>
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
              <windowsTriggers:OrientationStateTrigger Orientation="Portrait" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PaneLayout.Margin" Value="0 24 0 0" />
            <Setter Target="TopMenuLayout.Margin" Value="0 24 0 0" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- Debug -->
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{Binding IsDebug}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="MenuFlyoutItem_OpenDebugPage.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
      <!-- プレイヤーの表示状態 -->
      <VisualStateGroup>
        <!-- ここから下はプレイヤー表示中の表示分岐 -->
        <!-- PrimaryViewでウィンドウ全体で表示中 -->
        <VisualState x:Name="PlayingInPrimaryView">
          <VisualState.StateTriggers>
            <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode.Value, Mode=OneWay}" EqualTo="Fill" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="ContentLayout.Visibility" Value="Collapsed" />
            <Setter Target="BackButtonLayout.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <!-- デスクトップサイズで小窓表示中 -->
        <VisualState x:Name="DisplayIntoDesktopMenu">
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource DesktopWindowWidthBreakPoint}" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode.Value, Mode=OneWay}" EqualTo="WindowInWindow" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Width" Value="256" />
            <Setter Target="PlayerLayout.Height" Value="144" />
            <Setter Target="PlayerLayout.Margin" Value="0 0 8 8" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Bottom" />
            <Setter Target="PlayerLayout.HorizontalAlignment" Value="Right" />
          </VisualState.Setters>
        </VisualState>
        <!-- モバイルサイズで小窓表示中 -->
        <VisualState x:Name="DisplayIntoMobileTopSide">
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:AdaptiveTrigger MinWindowWidth="321" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode.Value, Mode=OneWay}" EqualTo="WindowInWindow" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Height" Value="240" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Height" Value="240" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Top" />
          </VisualState.Setters>
        </VisualState>
        <!-- モバイルサイズで小窓表示中 -->
        <VisualState x:Name="DisplayIntoMobileTopSide_MoreSmall">
          <VisualState.StateTriggers>
            <windowsTriggers:CompositeStateTrigger Operator="And">
              <windowsTriggers:AdaptiveTrigger MinWindowWidth="0" />
              <windowsTriggers:EqualsStateTrigger Value="{x:Bind _viewModel.PrimaryViewPlayerManager.DisplayMode.Value, Mode=OneWay}" EqualTo="WindowInWindow" />
            </windowsTriggers:CompositeStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="PlayerLayout.Visibility" Value="Visible" />
            <Setter Target="PlayerLayout.Height" Value="180" />
            <Setter Target="FloatPlayerLayout.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Visibility" Value="Visible" />
            <Setter Target="MobilePlayerTopMargin.Height" Value="180" />
            <Setter Target="PlayerLayout.VerticalAlignment" Value="Top" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
